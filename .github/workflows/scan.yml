name: scan 
on:
  pull_request:
    branches:
      - main # or the name of your main branch
    types: [opened, synchronize, reopened]
    # paths-ignore:
    # - '.github/workflows/**' 
    # - 'yaml/**'
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Create application.properties
      run: |
        touch ./src/main/resources/application.properties
        echo '${{ secrets.PROPERTIES }}' >> ./src/main/resources/application.properties        

    - name: Create sonar properties
      run: |
        touch ./sonar-project.properties
        echo '${{ secrets.SONAR_PROPERTIES }}' >> ./sonar-project.properties       
        
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v1.0.0
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
    - name: Notify Discord on Failure
      if: failure() 
      uses: Sniddl/discord-commits@v1.6
      with:
          message: "SonarQube 분석에 실패했습니다. ${{ github.run_id }}"
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Discord on succeeded
      if: success()
      uses: Sniddl/discord-commits@v1.6
      with:
          message: "SonarQube 분석에 성공했습니다. ${{ github.run_id }}"
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}    